import {
  CLOSE_REASON,
  createDefaultCloseMenuEvent,
  createRequestDeselectionEvent,
  createRequestSelectionEvent,
  isClosableKey
} from "./chunk-OAFQLE2N.js";
import {
  html as html2,
  literal
} from "./chunk-XN5DC322.js";
import "./chunk-XKWSA3V5.js";
import "./chunk-3MEJLGJH.js";
import "./chunk-S5LBIXDS.js";
import {
  classMap
} from "./chunk-Y52CB7WA.js";
import {
  requestUpdateOnAriaChange
} from "./chunk-G7CEFHTH.js";
import {
  LitElement,
  __decorate,
  css,
  customElement,
  html,
  nothing,
  property,
  query,
  state
} from "./chunk-CFLWIKS3.js";

// node_modules/@material/web/list/internal/listitem/forced-colors-styles.css.js
var styles = css`@media(forced-colors: active){:host{--md-list-item-disabled-label-text-color: GrayText;--md-list-item-disabled-label-text-opacity: 1;--md-list-item-disabled-leading-icon-color: GrayText;--md-list-item-disabled-leading-icon-opacity: 1;--md-list-item-disabled-trailing-icon-color: GrayText;--md-list-item-disabled-trailing-icon-opacity: 1}}/*# sourceMappingURL=forced-colors-styles.css.map */
`;

// node_modules/@material/web/list/internal/listitem/list-item-styles.css.js
var styles2 = css`:host{--_container-color: var(--md-list-item-container-color, var(--md-sys-color-surface, #fef7ff));--_container-shape: var(--md-list-item-container-shape, 0px);--_disabled-label-text-color: var(--md-list-item-disabled-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-label-text-opacity: var(--md-list-item-disabled-label-text-opacity, 0.3);--_disabled-leading-icon-color: var(--md-list-item-disabled-leading-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-leading-icon-opacity: var(--md-list-item-disabled-leading-icon-opacity, 0.38);--_disabled-trailing-icon-color: var(--md-list-item-disabled-trailing-icon-color, var(--md-sys-color-on-surface, #1d1b20));--_disabled-trailing-icon-opacity: var(--md-list-item-disabled-trailing-icon-opacity, 0.38);--_focus-label-text-color: var(--md-list-item-focus-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_focus-leading-icon-icon-color: var(--md-list-item-focus-leading-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_focus-trailing-icon-icon-color: var(--md-list-item-focus-trailing-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-label-text-color: var(--md-list-item-hover-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-leading-icon-icon-color: var(--md-list-item-hover-leading-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_hover-state-layer-color: var(--md-list-item-hover-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_hover-state-layer-opacity: var(--md-list-item-hover-state-layer-opacity, 0.08);--_hover-trailing-icon-icon-color: var(--md-list-item-hover-trailing-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_label-text-color: var(--md-list-item-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_label-text-line-height: var(--md-list-item-label-text-line-height, 1.5rem);--_label-text-type: var(--md-list-item-label-text-type, var(--md-sys-typescale-body-large, 400 1rem / 1.5rem var(--md-ref-typeface-plain, Roboto)));--_large-leading-video-height: var(--md-list-item-large-leading-video-height, 69px);--_leading-avatar-label-color: var(--md-list-item-leading-avatar-label-color, var(--md-sys-color-on-primary-container, #21005d));--_leading-avatar-label-type: var(--md-list-item-leading-avatar-label-type, var(--md-sys-typescale-title-medium, 500 1rem / 1.5rem var(--md-ref-typeface-plain, Roboto)));--_leading-avatar-color: var(--md-list-item-leading-avatar-color, var(--md-sys-color-primary-container, #eaddff));--_leading-avatar-shape: var(--md-list-item-leading-avatar-shape, 9999px);--_leading-avatar-size: var(--md-list-item-leading-avatar-size, 40px);--_leading-icon-color: var(--md-list-item-leading-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_leading-icon-size: var(--md-list-item-leading-icon-size, 18px);--_leading-image-height: var(--md-list-item-leading-image-height, 56px);--_leading-image-shape: var(--md-list-item-leading-image-shape, 0px);--_leading-image-width: var(--md-list-item-leading-image-width, 56px);--_leading-video-shape: var(--md-list-item-leading-video-shape, 0px);--_leading-video-width: var(--md-list-item-leading-video-width, 100px);--_one-line-container-height: var(--md-list-item-one-line-container-height, 56px);--_pressed-label-text-color: var(--md-list-item-pressed-label-text-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-leading-icon-icon-color: var(--md-list-item-pressed-leading-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_pressed-state-layer-color: var(--md-list-item-pressed-state-layer-color, var(--md-sys-color-on-surface, #1d1b20));--_pressed-state-layer-opacity: var(--md-list-item-pressed-state-layer-opacity, 0.12);--_pressed-trailing-icon-icon-color: var(--md-list-item-pressed-trailing-icon-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_small-leading-video-height: var(--md-list-item-small-leading-video-height, 56px);--_supporting-text-color: var(--md-list-item-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_supporting-text-type: var(--md-list-item-supporting-text-type, var(--md-sys-typescale-body-medium, 400 0.875rem / 1.25rem var(--md-ref-typeface-plain, Roboto)));--_three-line-container-height: var(--md-list-item-three-line-container-height, 88px);--_trailing-icon-color: var(--md-list-item-trailing-icon-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-icon-size: var(--md-list-item-trailing-icon-size, 24px);--_trailing-supporting-text-color: var(--md-list-item-trailing-supporting-text-color, var(--md-sys-color-on-surface-variant, #49454f));--_trailing-supporting-text-line-height: var(--md-list-item-trailing-supporting-text-line-height, 1rem);--_trailing-supporting-text-type: var(--md-list-item-trailing-supporting-text-type, var(--md-sys-typescale-label-small, 500 0.688rem / 1rem var(--md-ref-typeface-plain, Roboto)));--_two-line-container-height: var(--md-list-item-two-line-container-height, 72px);--_leading-element-leading-space: var(--md-list-item-leading-element-leading-space, 16px);--_leading-space: var(--md-list-item-leading-space, 16px);--_leading-video-leading-space: var(--md-list-item-leading-video-leading-space, 0px);--_trailing-element-headline-trailing-element-space: var(--md-list-item-trailing-element-headline-trailing-element-space, 16px);--_trailing-space: var(--md-list-item-trailing-space, 24px)}:host{color:unset;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}md-focus-ring{--md-focus-ring-shape: 8px}.list-item{align-items:center;box-sizing:border-box;display:flex;outline:none;position:relative;width:100%;text-decoration:none;background-color:var(--_container-color);border-radius:var(--_container-shape);-webkit-tap-highlight-color:rgba(0,0,0,0)}.list-item:not(.disabled):not(.noninteractive){cursor:pointer}.list-item.disabled{pointer-events:none}.content-wrapper{display:flex;width:100%;box-sizing:border-box;border-radius:inherit;padding-inline-end:var(--_trailing-space)}md-ripple{border-radius:inherit}.with-one-line{min-height:var(--_one-line-container-height)}.with-two-line{min-height:var(--_two-line-container-height)}.with-three-line{min-height:var(--_three-line-container-height)}.start{display:inline-flex;flex-direction:column;justify-content:center;align-items:center;flex:0 0 auto;z-index:1}.with-three-line .start{justify-content:start}slot[name=start]::slotted([data-variant=icon]),slot[name=start]::slotted([data-variant=image]),slot[name=start]::slotted([data-variant=avatar]){margin-inline-start:var(--_leading-element-leading-space)}.body{display:inline-flex;justify-content:center;flex-direction:column;box-sizing:border-box;flex:1 0 0;padding-inline-start:var(--_leading-space);z-index:1}.end{display:inline-flex;flex-direction:column;justify-content:center;flex:0 0 auto;z-index:1}.with-three-line .end{justify-content:start}slot[name=end]::slotted(*),.trailing-supporting-text{margin-inline-start:var(--_trailing-element-headline-trailing-element-space)}.label-text{display:flex;text-overflow:ellipsis;overflow-x:hidden;white-space:nowrap;color:var(--_label-text-color);font:var(--_label-text-type)}:hover .label-text{color:var(--_hover-label-text-color)}:focus .label-text{color:var(--_focus-label-text-color)}:active .label-text{color:var(--_pressed-label-text-color)}.disabled .label-text{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.supporting-text{text-overflow:ellipsis;white-space:normal;overflow:hidden;width:100%;color:var(--_supporting-text-color);font:var(--_supporting-text-type);-webkit-box-orient:vertical;-webkit-line-clamp:1;display:-webkit-box}.disabled .supporting-text{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.supporting-text--multi-line{-webkit-line-clamp:2}.trailing-supporting-text{font:var(--_trailing-supporting-text-type)}.list-item:not(.disabled) .trailing-supporting-text{color:var(--_trailing-supporting-text-color)}.disabled .trailing-supporting-text{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.with-three-line .trailing-supporting-text{margin-block-start:calc((var(--_label-text-line-height) - var(--_trailing-supporting-text-line-height))/2)}.focus-ring{z-index:1}::slotted([data-variant=image]){display:inline-flex;height:var(--_leading-image-height);width:var(--_leading-image-width);border-radius:var(--_leading-image-shape);margin-block:calc((var(--_two-line-container-height) - var(--_leading-image-height))/2)}.with-three-line ::slotted([data-variant=image]){margin-block:0}::slotted(*){fill:currentColor}slot[name=start]::slotted([data-variant=icon]){font-size:var(--_leading-icon-size);width:var(--_leading-icon-size);height:var(--_leading-icon-size);color:var(--_leading-icon-color)}.with-three-line slot[name=start]::slotted([data-variant=icon]){margin-block-start:calc((var(--_label-text-line-height) - var(--_leading-icon-size))/2)}slot[name=end]::slotted([data-variant=icon]){font-size:var(--_trailing-icon-size);width:var(--_trailing-icon-size);height:var(--_trailing-icon-size);color:var(--_trailing-icon-color)}.with-three-line slot[name=end]::slotted([data-variant=icon]){margin-block-start:calc((var(--_label-text-line-height) - var(--_trailing-icon-size))/2)}:hover slot[name=start]::slotted([data-variant=icon]){color:var(--_hover-leading-icon-icon-color)}:hover slot[name=end]::slotted([data-variant=icon]){color:var(--_hover-trailing-icon-icon-color)}:focus slot[name=start]::slotted([data-variant=icon]){color:var(--_focus-leading-icon-icon-color)}:focus slot[name=end]::slotted([data-variant=icon]){color:var(--_focus-trailing-icon-icon-color)}:active slot[name=start]::slotted([data-variant=icon]){color:var(--_pressed-leading-icon-icon-color)}:active slot[name=end]::slotted([data-variant=icon]){color:var(--_pressed-trailing-icon-icon-color)}.disabled slot[name=start]::slotted([data-variant=icon]){opacity:var(--_disabled-leading-icon-opacity);color:var(--_disabled-leading-icon-color)}.disabled slot[name=end]::slotted([data-variant=icon]){opacity:var(--_disabled-trailing-icon-opacity);color:var(--_disabled-trailing-icon-color)}::slotted([data-variant=avatar]){display:inline-flex;justify-content:center;align-items:center;background-color:var(--_leading-avatar-color);height:var(--_leading-avatar-size);width:var(--_leading-avatar-size);border-radius:var(--_leading-avatar-shape);color:var(--_leading-avatar-label-color);font:var(--_leading-avatar-label-type)}::slotted([data-variant=video]),::slotted([data-variant=video-large]){display:inline-flex;object-fit:cover;height:var(--_small-leading-video-height);width:var(--_leading-video-width);border-radius:var(--_leading-video-shape);margin-inline-start:var(--_leading-video-leading-space);margin-block:calc((var(--_three-line-container-height) - var(--_small-leading-video-height))/2)}.with-three-line ::slotted([data-variant=video]),.with-three-line ::slotted([data-variant=video-large]){margin-block:0}::slotted([data-variant=video-large]){margin-block:calc((var(--_three-line-container-height) - var(--_large-leading-video-height))/2);height:var(--_large-leading-video-height)}/*# sourceMappingURL=list-item-styles.css.map */
`;

// node_modules/@material/web/menu/internal/menuitem/forced-colors-styles.css.js
var styles3 = css`@media(forced-colors: active){.list-item{position:relative}:host([selected]) .list-item:not(.has-focus-ring)::before{content:"";position:absolute;inset:0;box-sizing:border-box;border-radius:inherit;pointer-events:none;border:3px double CanvasText}}/*# sourceMappingURL=forced-colors-styles.css.map */
`;

// node_modules/@material/web/menu/internal/menuitem/menu-item-styles.css.js
var styles4 = css`:host{--_container-color: var(--md-menu-item-container-color, var(--md-sys-color-surface-container, #f3edf7));--_selected-container-color: var(--md-menu-item-selected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--md-list-item-container-color: var(--_container-color)}:host([selected]) .list-item{background-color:var(--_selected-container-color)}.submenu-hover{--md-ripple-hover-opacity: 0}/*# sourceMappingURL=menu-item-styles.css.map */
`;

// node_modules/@material/web/list/internal/listitem/list-item.js
var ListItemEl = class extends LitElement {
  constructor() {
    super(...arguments);
    this.headline = "";
    this.supportingText = "";
    this.multiLineSupportingText = false;
    this.trailingSupportingText = "";
    this.disabled = false;
    this.itemTabIndex = -1;
    this.active = false;
    this.type = "listitem";
    this.isListItem = true;
    this.href = "";
    this.target = "";
    this.focusOnActivation = true;
    this.isFirstUpdate = true;
  }
  willUpdate(changed) {
    if (changed.has("active") && !this.disabled) {
      if (this.active) {
        this.itemTabIndex = 0;
      } else if (!this.isFirstUpdate) {
        this.itemTabIndex = -1;
      }
    }
  }
  render() {
    return this.renderListItem(html`
      <div class="content-wrapper">
        ${this.renderStart()}
        ${this.renderBody()}
        ${this.renderEnd()}
        ${this.renderRipple()}
        ${this.renderFocusRing()}
      </div>
    `);
  }
  /**
   * Renders the root list item.
   *
   * @param content the child content of the list item.
   */
  renderListItem(content) {
    const isAnchor = !!this.href;
    const tag = isAnchor ? literal`a` : literal`li`;
    const role = isAnchor || this.type === "none" ? nothing : this.type;
    const target = isAnchor && !!this.target ? this.target : nothing;
    return html2`
      <${tag}
        id="item"
        tabindex=${this.disabled ? -1 : this.itemTabIndex}
        role=${role}
        aria-selected=${this.ariaSelected || nothing}
        aria-checked=${this.ariaChecked || nothing}
        class="list-item ${classMap(this.getRenderClasses())}"
        href=${this.href || nothing}
        target=${target}
        @click=${this.onClick}
        @pointerenter=${this.onPointerenter}
        @pointerleave=${this.onPointerleave}
        @keydown=${this.onKeydown}
      >${content}</${tag}>
    `;
  }
  /**
   * Handles rendering of the ripple element.
   */
  renderRipple() {
    return html`
      <md-ripple
          part="ripple"
          for="item"
          ?disabled=${this.disabled}></md-ripple>`;
  }
  /**
   * Handles rendering of the focus ring.
   */
  renderFocusRing() {
    return html`
      <md-focus-ring
          @visibility-changed=${this.onFocusRingVisibilityChanged}
          class="focus-ring"
          part="focus-ring"
          for="item"
          inward></md-focus-ring>`;
  }
  onFocusRingVisibilityChanged(e) {
  }
  /**
   * Classes applied to the list item root.
   */
  getRenderClasses() {
    return {
      "with-one-line": this.supportingText === "",
      "with-two-line": this.supportingText !== "" && !this.multiLineSupportingText,
      "with-three-line": this.supportingText !== "" && this.multiLineSupportingText,
      "disabled": this.disabled
    };
  }
  /**
   * The content rendered at the start of the list item.
   */
  renderStart() {
    return html`<div class="start"><slot name="start"></slot></div>`;
  }
  /**
   * Handles rendering the headline and supporting text.
   */
  renderBody() {
    const supportingText = this.supportingText !== "" ? this.renderSupportingText() : "";
    return html`<div class="body"
      ><span class="label-text">${this.headline}</span>${supportingText}</div>`;
  }
  /**
   * Renders the one-line supporting text.
   */
  renderSupportingText() {
    return html`<span
        class="supporting-text ${classMap(this.getSupportingTextClasses())}"
      >${this.supportingText}</span>`;
  }
  /**
   * Gets the classes for the supporting text node
   */
  getSupportingTextClasses() {
    return { "supporting-text--multi-line": this.multiLineSupportingText };
  }
  /**
   * The content rendered at the end of the list item.
   */
  renderEnd() {
    const supportingText = this.trailingSupportingText !== "" ? this.renderTrailingSupportingText() : "";
    return html`<div class="end"
      ><slot name="end">${supportingText}</slot></div>`;
  }
  /**
   * Renders the supporting text at the end of the list item.
   */
  renderTrailingSupportingText() {
    return html`<span class="trailing-supporting-text"
      >${this.trailingSupportingText}</span>`;
  }
  updated(changed) {
    super.updated(changed);
    if (changed.has("active") && !this.isFirstUpdate && this.active && this.focusOnActivation) {
      this.focus();
    }
    this.isFirstUpdate = false;
  }
  focus() {
    var _a, _b;
    (_b = (_a = this.listItemRoot) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);
  }
};
(() => {
  requestUpdateOnAriaChange(ListItemEl);
})();
__decorate([
  property()
], ListItemEl.prototype, "headline", void 0);
__decorate([
  property({ attribute: "supporting-text" })
], ListItemEl.prototype, "supportingText", void 0);
__decorate([
  property({ type: Boolean, attribute: "multi-line-supporting-text" })
], ListItemEl.prototype, "multiLineSupportingText", void 0);
__decorate([
  property({ attribute: "trailing-supporting-text" })
], ListItemEl.prototype, "trailingSupportingText", void 0);
__decorate([
  property({ type: Boolean })
], ListItemEl.prototype, "disabled", void 0);
__decorate([
  property({ type: Number, attribute: "item-tabindex" })
], ListItemEl.prototype, "itemTabIndex", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], ListItemEl.prototype, "active", void 0);
__decorate([
  property()
], ListItemEl.prototype, "type", void 0);
__decorate([
  property({ type: Boolean, attribute: "md-list-item", reflect: true })
], ListItemEl.prototype, "isListItem", void 0);
__decorate([
  property()
], ListItemEl.prototype, "href", void 0);
__decorate([
  property()
], ListItemEl.prototype, "target", void 0);
__decorate([
  query(".list-item")
], ListItemEl.prototype, "listItemRoot", void 0);

// node_modules/@material/web/menu/internal/menuitem/menu-item.js
var MenuItemEl = class extends ListItemEl {
  constructor() {
    super(...arguments);
    this.isMenuItem = true;
    this.keepOpen = false;
    this.hasFocusRing = false;
    this.keepOpenOnClick = false;
    this.type = "menuitem";
  }
  onClick() {
    if (this.keepOpen || this.keepOpenOnClick)
      return;
    this.dispatchEvent(createDefaultCloseMenuEvent(this, { kind: CLOSE_REASON.CLICK_SELECTION }));
  }
  getRenderClasses() {
    return {
      ...super.getRenderClasses(),
      "has-focus-ring": this.hasFocusRing
    };
  }
  onFocusRingVisibilityChanged(e) {
    const focusRing = e.target;
    this.hasFocusRing = focusRing.visible;
  }
  onKeydown(event) {
    if (this.keepOpen)
      return;
    const keyCode = event.code;
    if (!event.defaultPrevented && isClosableKey(keyCode)) {
      event.preventDefault();
      this.dispatchEvent(createDefaultCloseMenuEvent(this, { kind: CLOSE_REASON.KEYDOWN, key: keyCode }));
    }
  }
};
__decorate([
  property({ type: Boolean, attribute: "md-menu-item", reflect: true })
], MenuItemEl.prototype, "isMenuItem", void 0);
__decorate([
  property({ type: Boolean, attribute: "keep-open" })
], MenuItemEl.prototype, "keepOpen", void 0);
__decorate([
  state()
], MenuItemEl.prototype, "hasFocusRing", void 0);

// node_modules/@material/web/select/internal/selectoption/select-option.js
var SelectOptionEl = class extends MenuItemEl {
  constructor() {
    super(...arguments);
    this.value = "";
    this.selected = false;
    this.type = "option";
  }
  willUpdate(changed) {
    if (changed.has("selected")) {
      this.active = this.selected;
      this.ariaSelected = this.selected ? "true" : "false";
      this.focusOnActivation = false;
    }
    super.willUpdate(changed);
  }
  updated(changed) {
    super.updated(changed);
    this.focusOnActivation = true;
    if (changed.has("selected") && changed.get("selected") !== void 0) {
      if (this.selected) {
        this.dispatchEvent(createRequestSelectionEvent());
      } else {
        this.dispatchEvent(createRequestDeselectionEvent());
      }
    }
  }
};
__decorate([
  property()
], SelectOptionEl.prototype, "value", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], SelectOptionEl.prototype, "selected", void 0);

// node_modules/@material/web/select/select-option.js
var MdSelectOption = class MdSelectOption2 extends SelectOptionEl {
};
MdSelectOption.styles = [styles2, styles4, styles, styles3];
MdSelectOption = __decorate([
  customElement("md-select-option")
], MdSelectOption);
export {
  MdSelectOption
};
/*! Bundled license information:

@material/web/list/internal/listitem/forced-colors-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/list/internal/listitem/list-item-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/menu/internal/menuitem/forced-colors-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/menu/internal/menuitem/menu-item-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/list/internal/listitem/list-item.js:
  (**
   * @license
   * Copyright 2022 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)

@material/web/menu/internal/menuitem/menu-item.js:
  (**
   * @license
   * Copyright 2022 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)

@material/web/select/internal/selectoption/select-option.js:
  (**
   * @license
   * Copyright 2023 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)

@material/web/select/select-option.js:
  (**
   * @license
   * Copyright 2023 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=@material_web_select_select-option.js.map
