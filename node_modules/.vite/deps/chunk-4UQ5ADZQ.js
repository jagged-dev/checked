// node_modules/@material/web/internal/motion/animation.js
var EASING = {
  STANDARD: "cubic-bezier(0.2, 0, 0, 1)",
  STANDARD_ACCELERATE: "cubic-bezier(.3,0,1,1)",
  STANDARD_DECELERATE: "cubic-bezier(0,0,0,1)",
  EMPHASIZED: "cubic-bezier(.3,0,0,1)",
  EMPHASIZED_ACCELERATE: "cubic-bezier(.3,0,.8,.15)",
  EMPHASIZED_DECELERATE: "cubic-bezier(.05,.7,.1,1)"
};
function createAnimationSignal() {
  let animationAbortController = null;
  return {
    start() {
      animationAbortController == null ? void 0 : animationAbortController.abort();
      animationAbortController = new AbortController();
      return animationAbortController.signal;
    },
    finish() {
      animationAbortController = null;
    }
  };
}
function createThrottle() {
  const stack = /* @__PURE__ */ new Set();
  return async (key = "", cb, timeout = async () => {
    await new Promise(requestAnimationFrame);
  }) => {
    if (!stack.has(key)) {
      stack.add(key);
      await timeout();
      if (stack.has(key)) {
        stack.delete(key);
        cb();
      }
    }
  };
}
function msFromTimeCSSValue(value) {
  const match = value.trim().match(/([\d.]+)(\s*s$)?/);
  const time = match == null ? void 0 : match[1];
  const seconds = match == null ? void 0 : match[2];
  return Number(time ?? 0) * (seconds ? 1e3 : 1);
}

export {
  EASING,
  createAnimationSignal,
  createThrottle,
  msFromTimeCSSValue
};
/*! Bundled license information:

@material/web/internal/motion/animation.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=chunk-4UQ5ADZQ.js.map
