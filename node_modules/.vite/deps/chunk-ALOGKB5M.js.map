{
  "version": 3,
  "sources": ["../../@material/web/select/internal/shared.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {MenuItem} from '../../menu/internal/shared.js';\n\n/**\n * The interface specific to a Select Option\n */\ninterface SelectOptionSelf {\n  /**\n   * The form value associated with the Select Option. (Note: the visual portion\n   * of the SelectOption is the headline defined in ListItem)\n   */\n  value: string;\n  /**\n   * Whether or not the SelectOption is selected.\n   */\n  selected: boolean;\n}\n\n/**\n * The interface to implement for a select option. Additionally, the element\n * must have `md-list-item` and `md-menu-item` attributes on the host.\n */\nexport type SelectOption = SelectOptionSelf&MenuItem;\n\n/**\n * A type that describes a SelectOption and its index.\n */\nexport type SelectOptionRecord = [SelectOption, number];\n\n/**\n * Given a list of select options, this function will return an array of\n * SelectOptionRecords that are selected.\n * \n * @return An array of SelectOptionRecords describing the options that are\n * selected.\n */\nexport function getSelectedItems(items: SelectOption[]) {\n  const selectedItemRecords: SelectOptionRecord[] = [];\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (item.selected) {\n      selectedItemRecords.push([item, i]);\n    }\n  }\n\n  return selectedItemRecords;\n}\n\n/**\n * An event fired by a SelectOption to request selection from md-select.\n * Typically fired after `selected` changes from `false` to `true`.\n */\nexport class RequestSelectionEvent extends Event {\n  constructor() {\n    super('request-selection', {bubbles: true, composed: true});\n  }\n}\n\n/**\n * An event fired by a SelectOption to request deselection from md-select.\n * Typically fired after `selected` changes from `true` to `false`.\n */\nexport class RequestDeselectionEvent extends Event {\n  constructor() {\n    super('request-deselection', {bubbles: true, composed: true});\n  }\n}\n"],
  "mappings": ";AAyCM,SAAU,iBAAiB,OAAqB;AACpD,QAAM,sBAA4C,CAAA;AAElD,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAM,OAAO,MAAM,CAAC;AACpB,QAAI,KAAK,UAAU;AACjB,0BAAoB,KAAK,CAAC,MAAM,CAAC,CAAC;;;AAItC,SAAO;AACT;AAMM,IAAO,wBAAP,cAAqC,MAAK;EAC9C,cAAA;AACE,UAAM,qBAAqB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EAC5D;;AAOI,IAAO,0BAAP,cAAuC,MAAK;EAChD,cAAA;AACE,UAAM,uBAAuB,EAAC,SAAS,MAAM,UAAU,KAAI,CAAC;EAC9D;;",
  "names": []
}
