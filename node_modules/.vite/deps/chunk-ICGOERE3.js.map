{
  "version": 3,
  "sources": ["../../@material/web/menu/internal/menuitem/forced-colors-styles.css.ts", "../../@material/web/menu/internal/menuitem/menu-item.ts", "../../@material/web/menu/internal/menuitem/menu-item-styles.css.ts"],
  "sourcesContent": ["/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`@media(forced-colors: active){.list-item{position:relative}:host([selected]) .list-item:not(:has(.focus-ring[visible]))::before{content:\"\";position:absolute;inset:0;box-sizing:border-box;border-radius:inherit;pointer-events:none;border:3px double CanvasText}}/*# sourceMappingURL=forced-colors-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {property} from 'lit/decorators.js';\n\nimport {ListItemEl, ListItemRole} from '../../../list/internal/listitem/list-item.js';\nimport {CLOSE_REASON, DefaultCloseMenuEvent, isClosableKey, MenuItem} from '../shared.js';\n\nexport {ListItemRole} from '../../../list/internal/listitem/list-item.js';\n\n/**\n * @fires close-menu {CloseMenuEvent}\n */\nexport class MenuItemEl extends ListItemEl implements MenuItem {\n  /**\n   * READONLY: self-identifies as a menu item and sets its identifying attribute\n   */\n  @property({type: Boolean, attribute: 'md-menu-item', reflect: true})\n  isMenuItem = true;\n\n  /**\n   * Keeps the menu open if clicked or keyboard selected.\n   */\n  @property({type: Boolean, attribute: 'keep-open'}) keepOpen = false;\n\n  /**\n   * Used for overriding e.g. sub-menu-item.\n   */\n  protected keepOpenOnClick = false;\n\n  override readonly type: ListItemRole = 'menuitem';\n\n  protected override onClick() {\n    if (this.keepOpen || this.keepOpenOnClick) return;\n\n    this.dispatchEvent(\n        new DefaultCloseMenuEvent(this, {kind: CLOSE_REASON.CLICK_SELECTION}));\n  }\n\n  protected override onKeydown(event: KeyboardEvent) {\n    if (this.keepOpen) return;\n    const keyCode = event.code;\n\n    if (!event.defaultPrevented && isClosableKey(keyCode)) {\n      event.preventDefault();\n      this.dispatchEvent(new DefaultCloseMenuEvent(\n          this, {kind: CLOSE_REASON.KEYDOWN, key: keyCode}));\n    }\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{--_list-item-selected-container-color: var(--md-menu-item-list-item-selected-container-color, var(--md-sys-color-surface-container-highest, #e6e0e9));--_list-item-container-color: var(--md-menu-item-list-item-container-color, var(--md-sys-color-surface-container, #f3edf7));--md-list-item-list-item-container-color: var(--_list-item-container-color)}:host([selected]) .list-item{background-color:var(--_list-item-selected-container-color)}.list-item:has(.submenu:hover){--md-ripple-hover-opacity: 0}/*# sourceMappingURL=menu-item-styles.css.map */\n`;\n "],
  "mappings": ";;;;;;;;;;;;;;;AAMQ,IAAM,SAAS;;;;ACUjB,IAAO,aAAP,cAA0B,WAAU;EAA1C,cAAA;;AAKE,SAAA,aAAa;AAKsC,SAAA,WAAW;AAKpD,SAAA,kBAAkB;AAEV,SAAA,OAAqB;EAmBzC;EAjBqB,UAAO;AACxB,QAAI,KAAK,YAAY,KAAK;AAAiB;AAE3C,SAAK,cACD,IAAI,sBAAsB,MAAM,EAAC,MAAM,aAAa,gBAAe,CAAC,CAAC;EAC3E;EAEmB,UAAU,OAAoB;AAC/C,QAAI,KAAK;AAAU;AACnB,UAAM,UAAU,MAAM;AAEtB,QAAI,CAAC,MAAM,oBAAoB,cAAc,OAAO,GAAG;AACrD,YAAM,eAAc;AACpB,WAAK,cAAc,IAAI,sBACnB,MAAM,EAAC,MAAM,aAAa,SAAS,KAAK,QAAO,CAAC,CAAC;;EAEzD;;AA9BA,WAAA;EADC,SAAS,EAAC,MAAM,SAAS,WAAW,gBAAgB,SAAS,KAAI,CAAC;;AAMhB,WAAA;EAAlD,SAAS,EAAC,MAAM,SAAS,WAAW,YAAW,CAAC;;;;ACpB3C,IAAMA,UAAS;;",
  "names": ["styles"]
}
