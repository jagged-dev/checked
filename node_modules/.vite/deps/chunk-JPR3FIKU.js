import {
  AttachableController
} from "./chunk-2ZSYHBR4.js";
import {
  LitElement,
  __decorate,
  css,
  customElement,
  property
} from "./chunk-DO6UFQ5V.js";

// node_modules/@material/web/focus/internal/focus-ring.js
var EVENTS = ["focusin", "focusout", "pointerdown"];
var FocusRing = class extends LitElement {
  constructor() {
    super(...arguments);
    this.visible = false;
    this.inward = false;
    this.attachableController = new AttachableController(this, this.onControlChange.bind(this));
  }
  get htmlFor() {
    return this.attachableController.htmlFor;
  }
  set htmlFor(htmlFor) {
    this.attachableController.htmlFor = htmlFor;
  }
  get control() {
    return this.attachableController.control;
  }
  attach(control) {
    this.attachableController.attach(control);
  }
  detach() {
    this.attachableController.detach();
  }
  /** @private */
  handleEvent(event) {
    var _a;
    if (event[HANDLED_BY_FOCUS_RING]) {
      return;
    }
    switch (event.type) {
      default:
        return;
      case "focusin":
        this.visible = ((_a = this.control) == null ? void 0 : _a.matches(":focus-visible")) ?? false;
        break;
      case "focusout":
      case "pointerdown":
        this.visible = false;
        break;
    }
    event[HANDLED_BY_FOCUS_RING] = true;
  }
  onControlChange(prev, next) {
    for (const event of EVENTS) {
      prev == null ? void 0 : prev.removeEventListener(event, this);
      next == null ? void 0 : next.addEventListener(event, this);
    }
  }
};
__decorate([
  property({ type: Boolean, reflect: true })
], FocusRing.prototype, "visible", void 0);
__decorate([
  property({ type: Boolean, reflect: true })
], FocusRing.prototype, "inward", void 0);
var HANDLED_BY_FOCUS_RING = Symbol("handledByFocusRing");

// node_modules/@material/web/focus/internal/focus-ring-styles.css.js
var styles = css`:host{--md-focus-ring-active-width: 8px;--md-focus-ring-color: var(--md-sys-color-secondary, #625b71);--md-focus-ring-duration: 600ms;--md-focus-ring-inward-offset: 0px;--md-focus-ring-outward-offset: 2px;--md-focus-ring-shape: 9999px;--md-focus-ring-width: 3px;--md-focus-ring-shape-start-start: var(--md-focus-ring-shape);--md-focus-ring-shape-start-end: var(--md-focus-ring-shape);--md-focus-ring-shape-end-end: var(--md-focus-ring-shape);--md-focus-ring-shape-end-start: var(--md-focus-ring-shape);animation-delay:0s,calc(var(--md-focus-ring-duration)*.25);animation-duration:calc(var(--md-focus-ring-duration)*.25),calc(var(--md-focus-ring-duration)*.75);animation-timing-function:cubic-bezier(0.2, 0, 0, 1);box-sizing:border-box;color:var(--md-focus-ring-color);display:none;pointer-events:none;position:absolute}:host([visible]){display:flex}:host(:not([inward])){animation-name:outward-grow,outward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end) + var(--md-focus-ring-outward-offset));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start) + var(--md-focus-ring-outward-offset));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end) + var(--md-focus-ring-outward-offset));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start) + var(--md-focus-ring-outward-offset));inset:calc(-1*(var(--md-focus-ring-outward-offset)));outline:var(--md-focus-ring-width) solid currentColor}:host([inward]){animation-name:inward-grow,inward-shrink;border-end-end-radius:calc(var(--md-focus-ring-shape-end-end) - var(--md-focus-ring-inward-offset));border-end-start-radius:calc(var(--md-focus-ring-shape-end-start) - var(--md-focus-ring-inward-offset));border-start-end-radius:calc(var(--md-focus-ring-shape-start-end) - var(--md-focus-ring-inward-offset));border-start-start-radius:calc(var(--md-focus-ring-shape-start-start) - var(--md-focus-ring-inward-offset));border:var(--md-focus-ring-width) solid currentColor;inset:var(--md-focus-ring-inward-offset)}@keyframes outward-grow{from{outline-width:0}to{outline-width:var(--md-focus-ring-active-width)}}@keyframes outward-shrink{from{outline-width:var(--md-focus-ring-active-width)}}@keyframes inward-grow{from{border-width:0}to{border-width:var(--md-focus-ring-active-width)}}@keyframes inward-shrink{from{border-width:var(--md-focus-ring-active-width)}}@media(prefers-reduced-motion){:host{animation:none}}/*# sourceMappingURL=focus-ring-styles.css.map */
`;

// node_modules/@material/web/focus/md-focus-ring.js
var MdFocusRing = class MdFocusRing2 extends FocusRing {
};
MdFocusRing.styles = [styles];
MdFocusRing = __decorate([
  customElement("md-focus-ring")
], MdFocusRing);

export {
  MdFocusRing
};
/*! Bundled license information:

@material/web/focus/internal/focus-ring.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)

@material/web/focus/internal/focus-ring-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/focus/md-focus-ring.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=chunk-JPR3FIKU.js.map
