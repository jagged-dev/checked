import {
  internals,
  setupFormSubmitter
} from "./chunk-V62K6RHG.js";
import {
  html as html2,
  literal
} from "./chunk-2REC2TRT.js";
import {
  dispatchActivationClick,
  isActivationClick
} from "./chunk-MAIEDRNT.js";
import {
  requestUpdateOnAriaChange
} from "./chunk-BGHQFSY4.js";
import {
  classMap
} from "./chunk-2R5WVURN.js";
import {
  LitElement,
  __decorate,
  css,
  html,
  isServer,
  nothing,
  property,
  query,
  queryAssignedElements
} from "./chunk-PCZDE3NX.js";

// node_modules/@material/web/button/internal/shared-styles.css.js
var styles = css`:host{display:inline-flex;height:var(--_container-height);outline:none;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);-webkit-tap-highlight-color:rgba(0,0,0,0);vertical-align:top;--md-ripple-hover-color: var(--_hover-state-layer-color);--md-ripple-pressed-color: var(--_pressed-state-layer-color);--md-ripple-hover-opacity: var(--_hover-state-layer-opacity);--md-ripple-pressed-opacity: var(--_pressed-state-layer-opacity)}:host([touch-target=wrapper]){margin:max(0px,(48px - var(--_container-height))/2) 0}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){cursor:default;pointer-events:none}.button{display:inline-flex;align-items:center;justify-content:center;box-sizing:border-box;min-inline-size:64px;border:none;outline:none;user-select:none;-webkit-appearance:none;vertical-align:middle;background:rgba(0,0,0,0);text-decoration:none;inline-size:100%;position:relative;z-index:0;height:100%;font:inherit;color:var(--_label-text-color);padding-inline-start:var(--_leading-space);padding-inline-end:var(--_trailing-space);gap:8px}.button::before{background-color:var(--_container-color);border-radius:inherit;content:"";inset:0;position:absolute}.button::-moz-focus-inner{padding:0;border:0}.button:hover{color:var(--_hover-label-text-color);cursor:pointer}.button:focus{color:var(--_focus-label-text-color)}.button:active{color:var(--_pressed-label-text-color);outline:none}.button:disabled .button__label{color:var(--_disabled-label-text-color);opacity:var(--_disabled-label-text-opacity)}.button:disabled::before{background-color:var(--_disabled-container-color);opacity:var(--_disabled-container-opacity)}@media(forced-colors: active){.button::before{content:"";box-sizing:border-box;border:1px solid CanvasText;border-radius:inherit;inset:0;pointer-events:none;position:absolute}.button:disabled{--_disabled-icon-opacity: 1;--_disabled-container-opacity: 1;--_disabled-label-text-opacity: 1}}.button,.button__ripple{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.button::after,.button::before,md-elevation,.button__ripple{z-index:-1}.button--icon-leading{padding-inline-start:var(--_with-leading-icon-leading-space);padding-inline-end:var(--_with-leading-icon-trailing-space)}.button--icon-trailing{padding-inline-start:var(--_with-trailing-icon-leading-space);padding-inline-end:var(--_with-trailing-icon-trailing-space)}.link-button-wrapper{inline-size:100%}.button ::slotted([slot=icon]){display:inline-flex;position:relative;writing-mode:horizontal-tb;fill:currentColor;color:var(--_icon-color);font-size:var(--_icon-size);inline-size:var(--_icon-size);block-size:var(--_icon-size)}.button:hover ::slotted([slot=icon]){color:var(--_hover-icon-color)}.button:focus ::slotted([slot=icon]){color:var(--_focus-icon-color)}.button:active ::slotted([slot=icon]){color:var(--_pressed-icon-color)}.button:disabled ::slotted([slot=icon]){color:var(--_disabled-icon-color);opacity:var(--_disabled-icon-opacity)}.touch{position:absolute;top:50%;height:48px;left:0;right:0;transform:translateY(-50%)}:host([touch-target=none]) .touch{display:none}/*# sourceMappingURL=shared-styles.css.map */
`;

// node_modules/@material/web/button/internal/button.js
var _a;
var Button = class extends LitElement {
  get name() {
    return this.getAttribute("name") ?? "";
  }
  set name(name) {
    this.setAttribute("name", name);
  }
  /**
   * The associated form element with which this element's value will submit.
   */
  get form() {
    return this[internals].form;
  }
  constructor() {
    super();
    this.disabled = false;
    this.href = "";
    this.target = "";
    this.trailingIcon = false;
    this.hasIcon = false;
    this.type = "submit";
    this.value = "";
    this[_a] = this.attachInternals();
    this.handleActivationClick = (event) => {
      if (!isActivationClick(event) || !this.buttonElement) {
        return;
      }
      this.focus();
      dispatchActivationClick(this.buttonElement);
    };
    if (!isServer) {
      this.addEventListener("click", this.handleActivationClick);
    }
  }
  focus() {
    var _a2;
    (_a2 = this.buttonElement) == null ? void 0 : _a2.focus();
  }
  blur() {
    var _a2;
    (_a2 = this.buttonElement) == null ? void 0 : _a2.blur();
  }
  render() {
    const isDisabled = this.disabled && !this.href;
    const button = this.href ? literal`a` : literal`button`;
    const { ariaLabel, ariaHasPopup, ariaExpanded } = this;
    return html2`
      <${button}
        class="button ${classMap(this.getRenderClasses())}"
        ?disabled=${isDisabled}
        aria-label="${ariaLabel || nothing}"
        aria-haspopup="${ariaHasPopup || nothing}"
        aria-expanded="${ariaExpanded || nothing}"
        href=${this.href || nothing}
        target=${this.target || nothing}
      >${this.renderContent()}</${button}>`;
  }
  getRenderClasses() {
    return {
      "button--icon-leading": !this.trailingIcon && this.hasIcon,
      "button--icon-trailing": this.trailingIcon && this.hasIcon
    };
  }
  renderContent() {
    var _a2, _b;
    const isDisabled = this.disabled && !this.href;
    const icon = html`<slot name="icon" @slotchange="${this.handleSlotChange}"></slot>`;
    return html`
      ${(_a2 = this.renderElevation) == null ? void 0 : _a2.call(this)}
      ${(_b = this.renderOutline) == null ? void 0 : _b.call(this)}
      <md-focus-ring part="focus-ring"></md-focus-ring>
      <md-ripple class="button__ripple" ?disabled="${isDisabled}"></md-ripple>
      <span class="touch"></span>
      ${this.trailingIcon ? nothing : icon}
      <span class="button__label"><slot></slot></span>
      ${this.trailingIcon ? icon : nothing}
    `;
  }
  handleSlotChange() {
    this.hasIcon = this.assignedIcons.length > 0;
  }
};
_a = internals;
(() => {
  requestUpdateOnAriaChange(Button);
  setupFormSubmitter(Button);
})();
Button.formAssociated = true;
Button.shadowRootOptions = { mode: "open", delegatesFocus: true };
__decorate([
  property({ type: Boolean, reflect: true })
], Button.prototype, "disabled", void 0);
__decorate([
  property()
], Button.prototype, "href", void 0);
__decorate([
  property()
], Button.prototype, "target", void 0);
__decorate([
  property({ type: Boolean, attribute: "trailing-icon" })
], Button.prototype, "trailingIcon", void 0);
__decorate([
  property({ type: Boolean, attribute: "has-icon" })
], Button.prototype, "hasIcon", void 0);
__decorate([
  property()
], Button.prototype, "type", void 0);
__decorate([
  property()
], Button.prototype, "value", void 0);
__decorate([
  query(".button")
], Button.prototype, "buttonElement", void 0);
__decorate([
  queryAssignedElements({ slot: "icon", flatten: true })
], Button.prototype, "assignedIcons", void 0);

export {
  Button,
  styles
};
/*! Bundled license information:

@material/web/button/internal/shared-styles.css.js:
  (**
    * @license
    * Copyright 2022 Google LLC
    * SPDX-License-Identifier: Apache-2.0
    *)

@material/web/button/internal/button.js:
  (**
   * @license
   * Copyright 2019 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=chunk-NYTH3G43.js.map
