{
  "version": 3,
  "sources": ["../../@material/web/field/internal/shared-styles.css.ts", "../../@material/web/field/internal/field.ts", "../../lit-html/src/directives/style-map.ts"],
  "sourcesContent": ["/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;resize:both}.field{display:flex;flex:1;flex-direction:column;writing-mode:horizontal-tb;max-width:100%}.container-overflow{border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-end-radius:var(--_container-shape-end-end);border-end-start-radius:var(--_container-shape-end-start);display:flex;height:100%;position:relative}.container{align-items:center;border-radius:inherit;display:flex;flex:1;max-height:100%;min-height:100%;min-width:min-content;position:relative}.field,.container-overflow{resize:inherit}.resizable:not(.disabled) .container{resize:inherit;overflow:hidden}.disabled{pointer-events:none}.start,.middle,.end{display:flex;box-sizing:border-box;height:100%;position:relative}.start{color:var(--_leading-content-color)}.end{color:var(--_trailing-content-color)}.start,.end{align-items:center;justify-content:center}.with-start .start,.with-end .end{min-width:48px}.with-start .start{margin-inline-end:4px}.with-end .end{margin-inline-start:4px}.middle{align-items:stretch;align-self:baseline;flex:1}.content{color:var(--_content-color);display:flex;flex:1;opacity:0;transition:opacity 83ms cubic-bezier(0.2, 0, 0, 1)}.no-label .content,.focused .content,.populated .content{opacity:1;transition-delay:67ms}:is(.disabled,.disable-transitions) .content{transition:none}.content ::slotted(*){all:unset;color:currentColor;font-family:var(--_content-font);font-size:var(--_content-size);line-height:var(--_content-line-height);font-weight:var(--_content-weight);width:100%;white-space:pre-wrap}.content ::slotted(:not(textarea)){padding-top:var(--_top-space);padding-bottom:var(--_bottom-space)}.content ::slotted(textarea){margin-top:var(--_top-space);margin-bottom:var(--_bottom-space)}:hover .content{color:var(--_hover-content-color)}:hover .start{color:var(--_hover-leading-content-color)}:hover .end{color:var(--_hover-trailing-content-color)}.focused .content{color:var(--_focus-content-color)}.focused .start{color:var(--_focus-leading-content-color)}.focused .end{color:var(--_focus-trailing-content-color)}.disabled .content{color:var(--_disabled-content-color)}.disabled.no-label .content,.disabled.focused .content,.disabled.populated .content{opacity:var(--_disabled-content-opacity)}.disabled .start{color:var(--_disabled-leading-content-color);opacity:var(--_disabled-leading-content-opacity)}.disabled .end{color:var(--_disabled-trailing-content-color);opacity:var(--_disabled-trailing-content-opacity)}.error .content{color:var(--_error-content-color)}.error .start{color:var(--_error-leading-content-color)}.error .end{color:var(--_error-trailing-content-color)}.error:hover .content{color:var(--_error-hover-content-color)}.error:hover .start{color:var(--_error-hover-leading-content-color)}.error:hover .end{color:var(--_error-hover-trailing-content-color)}.error.focused .content{color:var(--_error-focus-content-color)}.error.focused .start{color:var(--_error-focus-leading-content-color)}.error.focused .end{color:var(--_error-focus-trailing-content-color)}.label{box-sizing:border-box;color:var(--_label-text-color);overflow:hidden;max-width:100%;text-overflow:ellipsis;white-space:nowrap;z-index:1;font-family:var(--_label-text-font);font-size:var(--_label-text-size);line-height:var(--_label-text-line-height);font-weight:var(--_label-text-weight);width:min-content}.label-wrapper{inset:0;pointer-events:none;position:absolute}.label.resting{position:absolute;top:var(--_top-space)}.label.floating{font-size:var(--_label-text-populated-size);line-height:var(--_label-text-populated-line-height);transform-origin:top left}.label.hidden{opacity:0}.no-label .label{display:none}.label-wrapper{inset:0;position:absolute;text-align:initial}:hover .label{color:var(--_hover-label-text-color)}.focused .label{color:var(--_focus-label-text-color)}.disabled .label{color:var(--_disabled-label-text-color)}.disabled .label:not(.hidden){opacity:var(--_disabled-label-text-opacity)}.error .label{color:var(--_error-label-text-color)}.error:hover .label{color:var(--_error-hover-label-text-color)}.error.focused .label{color:var(--_error-focus-label-text-color)}.supporting-text{color:var(--_supporting-text-color);display:flex;font-family:var(--_supporting-text-font);font-size:var(--_supporting-text-size);line-height:var(--_supporting-text-line-height);font-weight:var(--_supporting-text-weight);gap:16px;justify-content:space-between;padding-inline-start:var(--_supporting-text-leading-space);padding-inline-end:var(--_supporting-text-trailing-space);padding-top:var(--_supporting-text-top-space)}.supporting-text :nth-child(2){flex-shrink:0}:hover .supporting-text{color:var(--_hover-supporting-text-color)}.focus .supporting-text{color:var(--_focus-supporting-text-color)}.disabled .supporting-text{color:var(--_disabled-supporting-text-color);opacity:var(--_disabled-supporting-text-opacity)}.error .supporting-text{color:var(--_error-supporting-text-color)}.error:hover .supporting-text{color:var(--_error-hover-supporting-text-color)}.error.focus .supporting-text{color:var(--_error-focus-supporting-text-color)}/*# sourceMappingURL=shared-styles.css.map */\n`;\n ", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {html, LitElement, nothing, PropertyValues, render, TemplateResult} from 'lit';\nimport {property, query, queryAssignedElements, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n\nimport {EASING} from '../../internal/motion/animation.js';\n\n/**\n * A field component.\n */\nexport class Field extends LitElement {\n  @property({type: Boolean}) disabled = false;\n  @property({type: Boolean}) error = false;\n  @property({type: Boolean}) focused = false;\n  @property() label = '';\n  @property({type: Boolean}) populated = false;\n  @property({type: Boolean}) required = false;\n  @property({type: Boolean}) resizable = false;\n  @property({attribute: 'supporting-text'}) supportingText = '';\n  @property({attribute: 'error-text'}) errorText = '';\n  @property({type: Number}) count = -1;\n  @property({type: Number}) max = -1;\n\n  /**\n   * Whether or not the field has leading content.\n   */\n  @property({type: Boolean, attribute: 'has-start'}) hasStart = false;\n\n  /**\n   * Whether or not the field has trailing content.\n   */\n  @property({type: Boolean, attribute: 'has-end'}) hasEnd = false;\n\n  @queryAssignedElements({slot: 'aria-describedby'})\n  private readonly slottedAriaDescribedBy!: HTMLElement[];\n\n  private get counterText() {\n    if (this.count < 0 || this.max < 0) {\n      return '';\n    }\n\n    return `${this.count} / ${this.max}`;\n  }\n\n  private get supportingOrErrorText() {\n    return this.error && this.errorText ? this.errorText : this.supportingText;\n  }\n\n  @state() private isAnimating = false;\n  private labelAnimation?: Animation;\n  /**\n   * When set to true, the error text's `role=\"alert\"` will be removed, then\n   * re-added after an animation frame. This will re-announce an error message\n   * to screen readers.\n   */\n  @state() private refreshErrorAlert = false;\n  @state() private disableTransitions = false;\n  @query('.label.floating') private readonly floatingLabelEl!: HTMLElement|null;\n  @query('.label.resting') private readonly restingLabelEl!: HTMLElement|null;\n  @query('.container') private readonly containerEl!: HTMLElement|null;\n\n  /**\n   * Re-announces the field's error supporting text to screen readers.\n   *\n   * Error text announces to screen readers anytime it is visible and changes.\n   * Use the method to re-announce the message when the text has not changed,\n   * but announcement is still needed (such as for `reportValidity()`).\n   */\n  reannounceError() {\n    this.refreshErrorAlert = true;\n  }\n\n  protected override update(props: PropertyValues<Field>) {\n    // Client-side property updates\n    const isDisabledChanging =\n        props.has('disabled') && props.get('disabled') !== undefined;\n    if (isDisabledChanging) {\n      this.disableTransitions = true;\n    }\n\n    // When disabling, remove focus styles if focused.\n    if (this.disabled && this.focused) {\n      props.set('focused', true);\n      this.focused = false;\n    }\n\n    // Animate if focused or populated change.\n    this.animateLabelIfNeeded({\n      wasFocused: props.get('focused'),\n      wasPopulated: props.get('populated')\n    });\n\n    super.update(props);\n  }\n\n  protected override render() {\n    const floatingLabel = this.renderLabel(/*isFloating*/ true);\n    const restingLabel = this.renderLabel(/*isFloating*/ false);\n    const outline = this.renderOutline?.(floatingLabel);\n    const classes = {\n      'disabled': this.disabled,\n      'disable-transitions': this.disableTransitions,\n      'error': this.error && !this.disabled,\n      'focused': this.focused,\n      'with-start': this.hasStart,\n      'with-end': this.hasEnd,\n      'populated': this.populated,\n      'resizable': this.resizable,\n      'required': this.required,\n      'no-label': !this.label,\n    };\n\n    return html`\n      <div class=\"field ${classMap(classes)}\">\n        <div class=\"container-overflow\">\n          ${this.renderBackground?.()}\n          ${this.renderIndicator?.()}\n          ${outline}\n          <div class=\"container\">\n            <div class=\"start\">\n              <slot name=\"start\"></slot>\n            </div>\n            <div class=\"middle\">\n              <div class=\"label-wrapper\">\n                ${restingLabel}\n                ${outline ? nothing : floatingLabel}\n              </div>\n              <div class=\"content\">\n                <slot></slot>\n              </div>\n            </div>\n            <div class=\"end\">\n              <slot name=\"end\"></slot>\n            </div>\n          </div>\n        </div>\n        ${this.renderSupportingText()}\n      </div>\n    `;\n  }\n\n  protected override updated(changed: PropertyValues<Field>) {\n    if (changed.has('supportingText') || changed.has('errorText') ||\n        changed.has('count') || changed.has('max')) {\n      this.updateSlottedAriaDescribedBy();\n    }\n\n    if (this.refreshErrorAlert) {\n      // The past render cycle removed the role=\"alert\" from the error message.\n      // Re-add it after an animation frame to re-announce the error.\n      requestAnimationFrame(() => {\n        this.refreshErrorAlert = false;\n      });\n    }\n\n    if (this.disableTransitions) {\n      requestAnimationFrame(() => {\n        this.disableTransitions = false;\n      });\n    }\n  }\n\n  protected renderBackground?(): TemplateResult;\n  protected renderIndicator?(): TemplateResult;\n  protected renderOutline?(floatingLabel: unknown): TemplateResult;\n\n  private renderSupportingText() {\n    const {supportingOrErrorText, counterText} = this;\n    if (!supportingOrErrorText && !counterText) {\n      return nothing;\n    }\n\n    // Always render the supporting text span so that our `space-around`\n    // container puts the counter at the end.\n    const start = html`<span>${supportingOrErrorText}</span>`;\n    // Conditionally render counter so we don't render the extra `gap`.\n    // TODO(b/244473435): add aria-label and announcements\n    const end = counterText ?\n        html`<span class=\"counter\">${counterText}</span>` :\n        nothing;\n\n    // Announce if there is an error and error text visible.\n    // If refreshErrorAlert is true, do not announce. This will remove the\n    // role=\"alert\" attribute. Another render cycle will happen after an\n    // animation frame to re-add the role.\n    const shouldErrorAnnounce =\n        this.error && this.errorText && !this.refreshErrorAlert;\n    const role = shouldErrorAnnounce ? 'alert' : nothing;\n    return html`\n      <div class=\"supporting-text\" role=${role}>${start}${end}</div>\n      <slot name=\"aria-describedby\" @slotchange=${\n        this.updateSlottedAriaDescribedBy}></slot>\n    `;\n  }\n\n  private updateSlottedAriaDescribedBy() {\n    for (const element of this.slottedAriaDescribedBy) {\n      render(html`${this.supportingOrErrorText} ${this.counterText}`, element);\n      element.setAttribute('hidden', '');\n    }\n  }\n\n  private renderLabel(isFloating: boolean) {\n    if (!this.label) {\n      return nothing;\n    }\n\n    let visible: boolean;\n    if (isFloating) {\n      // Floating label is visible when focused/populated or when animating.\n      visible = this.focused || this.populated || this.isAnimating;\n    } else {\n      // Resting label is visible when unfocused. It is never visible while\n      // animating.\n      visible = !this.focused && !this.populated && !this.isAnimating;\n    }\n\n    const classes = {\n      'hidden': !visible,\n      'floating': isFloating,\n      'resting': !isFloating,\n    };\n\n    // Add '*' if a label is present and the field is required\n    const labelText = `${this.label}${this.required ? '*' : ''}`;\n\n    return html`\n      <span class=\"label ${classMap(classes)}\"\n        aria-hidden=${!visible}\n      >${labelText}</span>\n    `;\n  }\n\n  private animateLabelIfNeeded({wasFocused, wasPopulated}: {\n    wasFocused?: boolean,\n    wasPopulated?: boolean\n  }) {\n    if (!this.label) {\n      return;\n    }\n\n    wasFocused ??= this.focused;\n    wasPopulated ??= this.populated;\n    const wasFloating = wasFocused || wasPopulated;\n    const shouldBeFloating = this.focused || this.populated;\n    if (wasFloating === shouldBeFloating) {\n      return;\n    }\n\n    this.isAnimating = true;\n    this.labelAnimation?.cancel();\n\n    // Only one label is visible at a time for clearer text rendering.\n    // The floating label is visible and used during animation. At the end of\n    // the animation, it will either remain visible (if floating) or hide and\n    // the resting label will be shown.\n    //\n    // We don't use forward filling because if the dimensions of the text field\n    // change (leading icon removed, density changes, etc), then the animation\n    // will be inaccurate.\n    //\n    // Re-calculating the animation each time will prevent any visual glitches\n    // from appearing.\n    // TODO(b/241113345): use animation tokens\n    this.labelAnimation = this.floatingLabelEl?.animate(\n        this.getLabelKeyframes(), {duration: 150, easing: EASING.STANDARD});\n\n    this.labelAnimation?.addEventListener('finish', () => {\n      // At the end of the animation, update the visible label.\n      this.isAnimating = false;\n    });\n  }\n\n  private getLabelKeyframes() {\n    const {floatingLabelEl, restingLabelEl} = this;\n    if (!floatingLabelEl || !restingLabelEl) {\n      return [];\n    }\n\n    const {x: floatingX, y: floatingY, height: floatingHeight} =\n        floatingLabelEl.getBoundingClientRect();\n    const {x: restingX, y: restingY, height: restingHeight} =\n        restingLabelEl.getBoundingClientRect();\n    const floatingScrollWidth = floatingLabelEl.scrollWidth;\n    const restingScrollWidth = restingLabelEl.scrollWidth;\n    // Scale by width ratio instead of font size since letter-spacing will scale\n    // incorrectly. Using the width we can better approximate the adjusted\n    // scale and compensate for tracking and overflow.\n    // (use scrollWidth instead of width to account for clipped labels)\n    const scale = restingScrollWidth / floatingScrollWidth;\n    const xDelta = restingX - floatingX;\n    // The line-height of the resting and floating label are different. When\n    // we move the floating label down to the resting label's position, it won't\n    // exactly match because of this. We need to adjust by half of what the\n    // final scaled floating label's height will be.\n    const yDelta = restingY - floatingY +\n        Math.round((restingHeight - floatingHeight * scale) / 2);\n\n    // Create the two transforms: floating to resting (using the calculations\n    // above), and resting to floating (re-setting the transform to initial\n    // values).\n    const restTransform =\n        `translateX(${xDelta}px) translateY(${yDelta}px) scale(${scale})`;\n    const floatTransform = `translateX(0) translateY(0) scale(1)`;\n\n    // Constrain the floating labels width to a scaled percentage of the\n    // resting label's width. This will prevent long clipped labels from\n    // overflowing the container.\n    const restingClientWidth = restingLabelEl.clientWidth;\n    const isRestingClipped = restingScrollWidth > restingClientWidth;\n    const width = isRestingClipped ? `${restingClientWidth / scale}px` : '';\n    if (this.focused || this.populated) {\n      return [\n        {transform: restTransform, width}, {transform: floatTransform, width}\n      ];\n    }\n\n    return [\n      {transform: floatTransform, width}, {transform: restTransform, width}\n    ];\n  }\n\n  getSurfacePositionClientRect() {\n    return this.containerEl!.getBoundingClientRect();\n  }\n}\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  private _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set(Object.keys(styleInfo));\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    for (const name of this._previousStyleProperties) {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = null;\n        }\n      }\n    }\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAMQ,IAAM,SAAS;;;;ACSjB,IAAO,QAAP,cAAqB,WAAU;EAArC,cAAA;;AAC6B,SAAA,WAAW;AACX,SAAA,QAAQ;AACR,SAAA,UAAU;AACzB,SAAA,QAAQ;AACO,SAAA,YAAY;AACZ,SAAA,WAAW;AACX,SAAA,YAAY;AACG,SAAA,iBAAiB;AACtB,SAAA,YAAY;AACvB,SAAA,QAAQ;AACR,SAAA,MAAM;AAKmB,SAAA,WAAW;AAKb,SAAA,SAAS;AAiBzC,SAAA,cAAc;AAOd,SAAA,oBAAoB;AACpB,SAAA,qBAAqB;EA6QxC;EAjSE,IAAY,cAAW;AACrB,QAAI,KAAK,QAAQ,KAAK,KAAK,MAAM,GAAG;AAClC,aAAO;;AAGT,WAAO,GAAG,KAAK,KAAK,MAAM,KAAK,GAAG;EACpC;EAEA,IAAY,wBAAqB;AAC/B,WAAO,KAAK,SAAS,KAAK,YAAY,KAAK,YAAY,KAAK;EAC9D;;;;;;;;EAsBA,kBAAe;AACb,SAAK,oBAAoB;EAC3B;EAEmB,OAAO,OAA4B;AAEpD,UAAM,qBACF,MAAM,IAAI,UAAU,KAAK,MAAM,IAAI,UAAU,MAAM;AACvD,QAAI,oBAAoB;AACtB,WAAK,qBAAqB;;AAI5B,QAAI,KAAK,YAAY,KAAK,SAAS;AACjC,YAAM,IAAI,WAAW,IAAI;AACzB,WAAK,UAAU;;AAIjB,SAAK,qBAAqB;MACxB,YAAY,MAAM,IAAI,SAAS;MAC/B,cAAc,MAAM,IAAI,WAAW;KACpC;AAED,UAAM,OAAO,KAAK;EACpB;EAEmB,SAAM;AApG3B;AAqGI,UAAM,gBAAgB,KAAK;;MAA2B;IAAI;AAC1D,UAAM,eAAe,KAAK;;MAA2B;IAAK;AAC1D,UAAM,WAAU,UAAK,kBAAL,8BAAqB;AACrC,UAAM,UAAU;MACd,YAAY,KAAK;MACjB,uBAAuB,KAAK;MAC5B,SAAS,KAAK,SAAS,CAAC,KAAK;MAC7B,WAAW,KAAK;MAChB,cAAc,KAAK;MACnB,YAAY,KAAK;MACjB,aAAa,KAAK;MAClB,aAAa,KAAK;MAClB,YAAY,KAAK;MACjB,YAAY,CAAC,KAAK;;AAGpB,WAAO;0BACe,SAAS,OAAO,CAAC;;aAE/B,UAAK,qBAAL,6BAAyB;aACzB,UAAK,oBAAL,6BAAwB;YACxB,OAAO;;;;;;;kBAOD,YAAY;kBACZ,UAAU,UAAU,aAAa;;;;;;;;;;;UAWzC,KAAK,qBAAoB,CAAE;;;EAGnC;EAEmB,QAAQ,SAA8B;AACvD,QAAI,QAAQ,IAAI,gBAAgB,KAAK,QAAQ,IAAI,WAAW,KACxD,QAAQ,IAAI,OAAO,KAAK,QAAQ,IAAI,KAAK,GAAG;AAC9C,WAAK,6BAA4B;;AAGnC,QAAI,KAAK,mBAAmB;AAG1B,4BAAsB,MAAK;AACzB,aAAK,oBAAoB;MAC3B,CAAC;;AAGH,QAAI,KAAK,oBAAoB;AAC3B,4BAAsB,MAAK;AACzB,aAAK,qBAAqB;MAC5B,CAAC;;EAEL;EAMQ,uBAAoB;AAC1B,UAAM,EAAC,uBAAuB,YAAW,IAAI;AAC7C,QAAI,CAAC,yBAAyB,CAAC,aAAa;AAC1C,aAAO;;AAKT,UAAM,QAAQ,aAAa,qBAAqB;AAGhD,UAAM,MAAM,cACR,6BAA6B,WAAW,YACxC;AAMJ,UAAM,sBACF,KAAK,SAAS,KAAK,aAAa,CAAC,KAAK;AAC1C,UAAM,OAAO,sBAAsB,UAAU;AAC7C,WAAO;0CAC+B,IAAI,IAAI,KAAK,GAAG,GAAG;kDAErD,KAAK,4BAA4B;;EAEvC;EAEQ,+BAA4B;AAClC,eAAW,WAAW,KAAK,wBAAwB;AACjD,aAAO,OAAO,KAAK,qBAAqB,IAAI,KAAK,WAAW,IAAI,OAAO;AACvE,cAAQ,aAAa,UAAU,EAAE;;EAErC;EAEQ,YAAY,YAAmB;AACrC,QAAI,CAAC,KAAK,OAAO;AACf,aAAO;;AAGT,QAAI;AACJ,QAAI,YAAY;AAEd,gBAAU,KAAK,WAAW,KAAK,aAAa,KAAK;WAC5C;AAGL,gBAAU,CAAC,KAAK,WAAW,CAAC,KAAK,aAAa,CAAC,KAAK;;AAGtD,UAAM,UAAU;MACd,UAAU,CAAC;MACX,YAAY;MACZ,WAAW,CAAC;;AAId,UAAM,YAAY,GAAG,KAAK,KAAK,GAAG,KAAK,WAAW,MAAM,EAAE;AAE1D,WAAO;2BACgB,SAAS,OAAO,CAAC;sBACtB,CAAC,OAAO;SACrB,SAAS;;EAEhB;EAEQ,qBAAqB,EAAC,YAAY,aAAY,GAGrD;AAjPH;AAkPI,QAAI,CAAC,KAAK,OAAO;AACf;;AAGF,mBAAA,aAAe,KAAK;AACpB,qBAAA,eAAiB,KAAK;AACtB,UAAM,cAAc,cAAc;AAClC,UAAM,mBAAmB,KAAK,WAAW,KAAK;AAC9C,QAAI,gBAAgB,kBAAkB;AACpC;;AAGF,SAAK,cAAc;AACnB,eAAK,mBAAL,mBAAqB;AAcrB,SAAK,kBAAiB,UAAK,oBAAL,mBAAsB,QACxC,KAAK,kBAAiB,GAAI,EAAC,UAAU,KAAK,QAAQ,OAAO,SAAQ;AAErE,eAAK,mBAAL,mBAAqB,iBAAiB,UAAU,MAAK;AAEnD,WAAK,cAAc;IACrB;EACF;EAEQ,oBAAiB;AACvB,UAAM,EAAC,iBAAiB,eAAc,IAAI;AAC1C,QAAI,CAAC,mBAAmB,CAAC,gBAAgB;AACvC,aAAO,CAAA;;AAGT,UAAM,EAAC,GAAG,WAAW,GAAG,WAAW,QAAQ,eAAc,IACrD,gBAAgB,sBAAqB;AACzC,UAAM,EAAC,GAAG,UAAU,GAAG,UAAU,QAAQ,cAAa,IAClD,eAAe,sBAAqB;AACxC,UAAM,sBAAsB,gBAAgB;AAC5C,UAAM,qBAAqB,eAAe;AAK1C,UAAM,QAAQ,qBAAqB;AACnC,UAAM,SAAS,WAAW;AAK1B,UAAM,SAAS,WAAW,YACtB,KAAK,OAAO,gBAAgB,iBAAiB,SAAS,CAAC;AAK3D,UAAM,gBACF,cAAc,MAAM,kBAAkB,MAAM,aAAa,KAAK;AAClE,UAAM,iBAAiB;AAKvB,UAAM,qBAAqB,eAAe;AAC1C,UAAM,mBAAmB,qBAAqB;AAC9C,UAAM,QAAQ,mBAAmB,GAAG,qBAAqB,KAAK,OAAO;AACrE,QAAI,KAAK,WAAW,KAAK,WAAW;AAClC,aAAO;QACL,EAAC,WAAW,eAAe,MAAK;QAAG,EAAC,WAAW,gBAAgB,MAAK;;;AAIxE,WAAO;MACL,EAAC,WAAW,gBAAgB,MAAK;MAAG,EAAC,WAAW,eAAe,MAAK;;EAExE;EAEA,+BAA4B;AAC1B,WAAO,KAAK,YAAa,sBAAqB;EAChD;;AAzT2B,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACE,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACE,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACb,WAAA;EAAX,SAAQ;;AACkB,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACE,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACE,WAAA;EAA1B,SAAS,EAAC,MAAM,QAAO,CAAC;;AACiB,WAAA;EAAzC,SAAS,EAAC,WAAW,kBAAiB,CAAC;;AACH,WAAA;EAApC,SAAS,EAAC,WAAW,aAAY,CAAC;;AACT,WAAA;EAAzB,SAAS,EAAC,MAAM,OAAM,CAAC;;AACE,WAAA;EAAzB,SAAS,EAAC,MAAM,OAAM,CAAC;;AAK2B,WAAA;EAAlD,SAAS,EAAC,MAAM,SAAS,WAAW,YAAW,CAAC;;AAKA,WAAA;EAAhD,SAAS,EAAC,MAAM,SAAS,WAAW,UAAS,CAAC;;AAG9B,WAAA;EADhB,sBAAsB,EAAC,MAAM,mBAAkB,CAAC;;AAehC,WAAA;EAAhB,MAAK;;AAOW,WAAA;EAAhB,MAAK;;AACW,WAAA;EAAhB,MAAK;;AACqC,WAAA;EAA1C,MAAM,iBAAiB;;AACkB,WAAA;EAAzC,MAAM,gBAAgB;;AACe,WAAA;EAArC,MAAM,YAAY;;;;ACtCrB,IAAM,YAAY;AAElB,IAAM,gBAAgB,OAAO;AAE7B,IAAM,WAAW,IAAI,cAAc;AAEnC,IAAM,oBAAN,cAAgC,UAAS;EAGvC,YAAY,UAAkB;AAnChC;AAoCI,UAAM,QAAQ;AACd,QACE,SAAS,SAAS,SAAS,aAC3B,SAAS,SAAS,aACjB,cAAS,YAAT,mBAAkB,UAAoB,GACvC;AACA,YAAM,IAAI,MACR,4GAC+C;;EAGrD;EAEA,OAAO,WAA8B;AACnC,WAAO,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,OAAO,SAAQ;AACnD,YAAM,QAAQ,UAAU,IAAI;AAC5B,UAAI,SAAS,MAAM;AACjB,eAAO;;AAST,aAAO,KAAK,SAAS,GAAG,IACpB,OACA,KACG,QAAQ,qCAAqC,KAAK,EAClD,YAAW;AAClB,aAAO,QAAQ,GAAG,IAAI,IAAI,KAAK;IACjC,GAAG,EAAE;EACP;EAES,OAAO,MAAqB,CAAC,SAAS,GAA4B;AACzE,UAAM,EAAC,MAAK,IAAI,KAAK;AAErB,QAAI,KAAK,6BAA6B,QAAW;AAC/C,WAAK,2BAA2B,IAAI,IAAI,OAAO,KAAK,SAAS,CAAC;AAC9D,aAAO,KAAK,OAAO,SAAS;;AAI9B,eAAW,QAAQ,KAAK,0BAA0B;AAEhD,UAAI,UAAU,IAAI,KAAK,MAAM;AAC3B,aAAK,yBAA0B,OAAO,IAAI;AAC1C,YAAI,KAAK,SAAS,GAAG,GAAG;AACtB,gBAAM,eAAe,IAAI;eACpB;AAEJ,gBAAc,IAAI,IAAI;;;;AAM7B,eAAW,QAAQ,WAAW;AAC5B,YAAM,QAAQ,UAAU,IAAI;AAC5B,UAAI,SAAS,MAAM;AACjB,aAAK,yBAAyB,IAAI,IAAI;AACtC,cAAM,cACJ,OAAO,UAAU,YAAY,MAAM,SAAS,aAAa;AAC3D,YAAI,KAAK,SAAS,GAAG,KAAK,aAAa;AACrC,gBAAM,YACJ,MACA,cACK,MAAiB,MAAM,GAAG,QAAQ,IAClC,OACL,cAAc,YAAY,EAAE;eAEzB;AAEJ,gBAAc,IAAI,IAAI;;;;AAI7B,WAAO;EACT;;AAuBK,IAAM,WAAW,UAAU,iBAAiB;",
  "names": []
}
