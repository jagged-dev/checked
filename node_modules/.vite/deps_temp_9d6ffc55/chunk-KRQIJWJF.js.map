{
  "version": 3,
  "sources": ["../../@material/web/iconbutton/internal/icon-button.ts", "../../@material/web/iconbutton/internal/shared-styles.css.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '../../focus/md-focus-ring.js';\nimport '../../ripple/ripple.js';\n\nimport {html, LitElement, nothing} from 'lit';\nimport {property, state} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\nimport {html as staticHtml, literal} from 'lit/static-html.js';\n\nimport {ARIAMixinStrict} from '../../internal/aria/aria.js';\nimport {requestUpdateOnAriaChange} from '../../internal/aria/delegate.js';\nimport {internals} from '../../internal/controller/element-internals.js';\nimport {FormSubmitter, FormSubmitterType, setupFormSubmitter} from '../../internal/controller/form-submitter.js';\nimport {isRtl} from '../../internal/controller/is-rtl.js';\n\ntype LinkTarget = '_blank'|'_parent'|'_self'|'_top';\n\n// tslint:disable-next-line:enforce-comments-on-exported-symbols\nexport class IconButton extends LitElement implements FormSubmitter {\n  static {\n    requestUpdateOnAriaChange(IconButton);\n    setupFormSubmitter(IconButton);\n  }\n\n  /** @nocollapse */\n  static get formAssociated() {\n    return true;\n  }\n\n  /** @nocollapse */\n  static override shadowRootOptions:\n      ShadowRootInit = {mode: 'open', delegatesFocus: true};\n\n  /**\n   * Disables the icon button and makes it non-interactive.\n   */\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  /**\n   * Flips the icon if it is in an RTL context at startup.\n   */\n  @property({type: Boolean, attribute: 'flip-icon-in-rtl'})\n  flipIconInRtl = false;\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `href` resource attribute.\n   */\n  @property() href = '';\n\n  /**\n   * Sets the underlying `HTMLAnchorElement`'s `target` attribute.\n   */\n  @property() target = '';\n\n  /**\n   * The `aria-label` of the button when the button is toggleable and selected.\n   */\n  @property({attribute: 'selected-aria-label', reflect: true})\n  selectedAriaLabel!: string;\n\n  /**\n   * When true, the button will toggle between selected and unselected\n   * states\n   */\n  @property({type: Boolean}) toggle = false;\n\n  /**\n   * Sets the selected state. When false, displays the default icon. When true,\n   * displays the `selectedIcon`, or the default icon If no `selectedIcon` is\n   * provided.\n   */\n  @property({type: Boolean, reflect: true}) selected = false;\n\n  @property() type: FormSubmitterType = 'submit';\n\n  @state() private flipIcon = isRtl(this, this.flipIconInRtl);\n\n  /** @private */\n  [internals] =\n      (this as HTMLElement /* needed for closure */).attachInternals();\n\n  /**\n   * Link buttons cannot be disabled.\n   */\n  override willUpdate() {\n    if (this.href) {\n      this.disabled = false;\n    }\n  }\n\n  protected override render() {\n    const tag = this.href ? literal`div` : literal`button`;\n    // Needed for closure conformance\n    const {ariaLabel, ariaHasPopup, ariaExpanded} = this as ARIAMixinStrict;\n    const hasToggledAriaLabel = ariaLabel && this.selectedAriaLabel;\n    const ariaPressedValue = hasToggledAriaLabel ? nothing : this.selected;\n    let ariaLabelValue: string|null|typeof nothing = nothing;\n    if (!this.href) {\n      ariaLabelValue = (hasToggledAriaLabel && this.selected) ?\n          this.selectedAriaLabel :\n          ariaLabel;\n    }\n    return staticHtml`<${tag}\n        class=\"icon-button ${classMap(this.getRenderClasses())}\"\n        id=\"button\"\n        aria-label=\"${ariaLabelValue || nothing}\"\n        aria-haspopup=\"${!this.href && ariaHasPopup || nothing}\"\n        aria-expanded=\"${!this.href && ariaExpanded || nothing}\"\n        aria-pressed=\"${ariaPressedValue}\"\n        ?disabled=\"${!this.href && this.disabled}\"\n        @click=\"${this.handleClick}\">\n        ${this.renderFocusRing()}\n        ${this.renderRipple()}\n        ${!this.selected ? this.renderIcon() : nothing}\n        ${this.selected ? this.renderSelectedIcon() : nothing}\n        ${this.renderTouchTarget()}\n        ${this.href && this.renderLink()}\n  </${tag}>`;\n  }\n\n  private renderLink() {\n    // Needed for closure conformance\n    const {ariaLabel} = this as ARIAMixinStrict;\n    return html`\n      <a class=\"link\"\n        id=\"link\"\n        href=\"${this.href}\"\n        target=\"${this.target as LinkTarget || nothing}\"\n        aria-label=\"${ariaLabel || nothing}\"\n      ></a>\n    `;\n  }\n\n  protected getRenderClasses() {\n    return {\n      'flip-icon': this.flipIcon,\n      'selected': this.toggle && this.selected,\n    };\n  }\n\n  private renderIcon() {\n    return html`<span class=\"icon\"><slot></slot></span>`;\n  }\n\n  private renderSelectedIcon() {\n    // Use default slot as fallback to not require specifying multiple icons\n    return html`<span class=\"icon icon--selected\"><slot name=\"selectedIcon\"><slot></slot></slot></span>`;\n  }\n\n  private renderTouchTarget() {\n    return html`<span class=\"touch\"></span>`;\n  }\n\n  private renderFocusRing() {\n    return html`<md-focus-ring part=\"focus-ring\" for=${\n        this.href ? 'link' : 'button'}></md-focus-ring>`;\n  }\n\n  private renderRipple() {\n    return html`<md-ripple\n      for=${this.href ? 'link' : nothing}\n      ?disabled=\"${!this.href && this.disabled}\"\n    ></md-ripple>`;\n  }\n\n  override connectedCallback() {\n    this.flipIcon = isRtl(this, this.flipIconInRtl);\n    super.connectedCallback();\n  }\n\n  private handleClick() {\n    if (!this.toggle || this.disabled) {\n      return;\n    }\n\n    this.selected = !this.selected;\n    this.dispatchEvent(\n        new InputEvent('input', {bubbles: true, composed: true}));\n    // Bubbles but does not compose to mimic native browser <input> & <select>\n    // Additionally, native change event is not an InputEvent.\n    this.dispatchEvent(new Event('change', {bubbles: true}));\n  }\n}\n", "/**\n  * @license\n  * Copyright 2022 Google LLC\n  * SPDX-License-Identifier: Apache-2.0\n  */\n import {css} from 'lit';\n export const styles = css`:host{display:inline-flex;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0);height:var(--_container-size);width:var(--_container-size);justify-content:center}md-focus-ring{--md-focus-ring-shape-start-start: var(--_container-shape-start-start);--md-focus-ring-shape-start-end: var(--_container-shape-start-end);--md-focus-ring-shape-end-end: var(--_container-shape-end-end);--md-focus-ring-shape-end-start: var(--_container-shape-end-start)}:host([disabled]){pointer-events:none}.icon-button{align-items:center;background:none;border:none;box-sizing:border-box;cursor:pointer;display:flex;justify-content:center;outline:none;position:relative;text-decoration:none;user-select:none;z-index:0;flex:1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.icon ::slotted(*){font-size:var(--_icon-size);height:var(--_icon-size);width:var(--_icon-size);font-weight:inherit}md-ripple{z-index:-1;border-start-start-radius:var(--_container-shape-start-start);border-start-end-radius:var(--_container-shape-start-end);border-end-start-radius:var(--_container-shape-end-start);border-end-end-radius:var(--_container-shape-end-end)}.flip-icon .icon{transform:scaleX(-1)}.icon{display:inline-flex}.link{height:100%;outline:none;position:absolute;width:100%}.touch{position:absolute;top:50%;height:48px;left:50%;width:48px;transform:translate(-50%, -50%)}/*# sourceMappingURL=shared-styles.css.map */\n`;\n "],
  "mappings": "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",
  "names": ["html"]
}
