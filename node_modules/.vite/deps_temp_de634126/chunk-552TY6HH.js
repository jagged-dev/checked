import {
  requestUpdateOnAriaChange
} from "./chunk-G7CEFHTH.js";
import {
  classMap
} from "./chunk-KUIFIEKI.js";
import {
  LitElement,
  __decorate,
  html,
  nothing,
  property
} from "./chunk-RX3VV7CT.js";

// node_modules/@material/web/progress/internal/progress.js
var Progress = class extends LitElement {
  constructor() {
    super(...arguments);
    this.value = 0;
    this.max = 1;
    this.indeterminate = false;
    this.fourColor = false;
  }
  render() {
    const { ariaLabel } = this;
    return html`
      <div class="progress ${classMap(this.getRenderClasses())}"
        role="progressbar"
        aria-label="${ariaLabel || nothing}"
        aria-valuemin="0"
        aria-valuemax=${this.max}
        aria-valuenow=${this.indeterminate ? nothing : this.value}
      >${this.renderIndicator()}</div>
    `;
  }
  getRenderClasses() {
    return {
      "indeterminate": this.indeterminate,
      "four-color": this.fourColor
    };
  }
};
(() => {
  requestUpdateOnAriaChange(Progress);
})();
__decorate([
  property({ type: Number })
], Progress.prototype, "value", void 0);
__decorate([
  property({ type: Number })
], Progress.prototype, "max", void 0);
__decorate([
  property({ type: Boolean })
], Progress.prototype, "indeterminate", void 0);
__decorate([
  property({ type: Boolean, attribute: "four-color" })
], Progress.prototype, "fourColor", void 0);

export {
  Progress
};
/*! Bundled license information:

@material/web/progress/internal/progress.js:
  (**
   * @license
   * Copyright 2023 Google LLC
   * SPDX-License-Identifier: Apache-2.0
   *)
*/
//# sourceMappingURL=chunk-552TY6HH.js.map
